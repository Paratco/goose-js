name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Run semantic-release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.PARATCO_BOT_ID }}
          private-key: ${{ secrets.PARATCO_BOT_KEY }}

      - name: Get GitHub App User ID
        id: app-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Run get new version
        run: npx semantic-release --no-ci -d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.app-token.outputs.app-slug }}[bot]
          GIT_COMMITTER_NAME: ${{ steps.app-token.outputs.app-slug }}[bot]
          GIT_AUTHOR_EMAIL: ${{ steps.app-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com
          GIT_COMMITTER_EMAIL: ${{ steps.app-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com
          NPM_TOKEN: ${{ secrets.NPM_WRITE_TOKEN }}
